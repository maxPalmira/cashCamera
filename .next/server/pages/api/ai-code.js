"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ai-code";
exports.ids = ["pages/api/ai-code"];
exports.modules = {

/***/ "multer":
/*!*************************!*\
  !*** external "multer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("multer");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-code&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-code.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-code&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-code.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/ai-code.js */ \"(api)/./pages/api/ai-code.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ai-code\",\n        pathname: \"/api/ai-code\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_ai_code_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFpLWNvZGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmFpLWNvZGUuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDbUQ7QUFDbkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGtEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxrREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXNoY2FtZXJhLz8xNmU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvYWktY29kZS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FpLWNvZGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9haS1jb2RlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-code&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-code.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/ai-code.js":
/*!******************************!*\
  !*** ./pages/api/ai-code.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multer */ \"multer\");\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Configure multer for file upload\nconst upload = multer__WEBPACK_IMPORTED_MODULE_1___default()({\n    storage: multer__WEBPACK_IMPORTED_MODULE_1___default().diskStorage({\n        destination: \"./tmp\",\n        filename: (req, file, cb)=>{\n            cb(null, `${Date.now()}-${file.originalname}`);\n        }\n    })\n});\n// Initialize OpenAI client\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n// Ensure tmp directory exists\nconst tmpDir = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"tmp\");\nif (!fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(tmpDir)) {\n    fs__WEBPACK_IMPORTED_MODULE_2___default().mkdirSync(tmpDir);\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        console.log(\"API Key:\", process.env.OPENAI_API_KEY); // Temporary debug log\n        // Handle file upload\n        const uploadMiddleware = upload.single(\"image\");\n        await new Promise((resolve, reject)=>{\n            uploadMiddleware(req, res, (err)=>{\n                if (err) reject(err);\n                resolve();\n            });\n        });\n        if (!req.file) {\n            return res.status(400).json({\n                error: \"No image file provided\"\n            });\n        }\n        // Read the uploaded file\n        const imageBuffer = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(req.file.path);\n        const base64Image = imageBuffer.toString(\"base64\");\n        // Analyze image using OpenAI Vision\n        const response = await openai.chat.completions.create({\n            model: \"gpt-4o-mini\",\n            messages: [\n                {\n                    role: \"user\",\n                    content: [\n                        {\n                            type: \"text\",\n                            text: `Analyze this image and provide a JSON response in this exact format: {\n                \"title\": \"A brief, catchy title\",\n                \"description\": \"A detailed visual description focusing on shapes, colors, composition, and physical elements\",\n                \"emotional_analysis\": \"A separate analysis focusing on emotions, expressions, body language, and mood\",\n                \"relevant_quote\": \"A famous quote that relates to the mood, emotion, or theme of the image. Include author attribution\",\n                \"fashion_commentary\": \"A high-fashion magazine style critique of the clothing and accessories\",\n                \"beauty_analysis\": \"IF FEMALE: Detailed makeup analysis in beauty magazine style, covering techniques, color choices, and overall impact. IF MALE: Detailed facial hair/grooming analysis in men's magazine style. IF NO PERSON: omit this field\",\n                \"political_analysis\": \"An analysis of any political leanings suggested by the image, including style choices, symbols, or context. If no clear indicators: 'No clear political indicators visible'\",\n                \"fragrance_suggestion\": \"A luxury perfume/cologne recommendation that matches the mood, style, and personality shown in the image, including scent notes and brand\",\n                \"cosmetic_suggestions\": \"Professional aesthetic medicine suggestions including potential surgical and non-surgical enhancements (e.g., Botox, fillers, surgical procedures) to enhance facial features and skin quality. Include estimated recovery times if applicable.\",\n                \"eyewear_suggestions\": \"Personalized eyewear recommendations based on face shape, style, and current trends. Include specific frame styles, brands, and colors that would complement the person's features\",\n                \"symbolic_meaning\": \"Deep analysis of symbols, metaphors, and hidden meanings present in the image\",\n                \"cultural_significance\": \"Analysis of cultural references, traditions, and societal implications\",\n                \"psychological_insight\": \"Psychological interpretation of body language, expressions, and environmental cues\",\n                \"artistic_elements\": \"Analysis of composition, color theory, lighting, and artistic techniques used\",\n                \"historical_context\": \"Connections to historical periods, movements, or significant moments\",\n                \"haircut_suggestion\": \"Detailed haircut recommendations including style, length, layers, and face-framing elements that would enhance features. Include celebrity references if applicable\",\n                \"hair_color_suggestion\": \"Recommended hair color palette including base color, highlights, lowlights, or balayage techniques that would complement skin tone and eyes\",\n                \"winter_wear_suggestion\": \"Curated winter wardrobe suggestions including outerwear, accessories, and layering pieces that match the person's style and body type\",\n                \"tags\": [\"tag1\", \"tag2\", \"tag3\", \"tag4\", \"tag5\"],\n                \"business_opportunity\": \"A detailed analysis of potential business opportunities based on the image's elements, including market gaps, innovative ideas, and monetization strategies that could lead to significant financial gains. Include specific action steps and timeline.\"\n              }`\n                        },\n                        {\n                            type: \"image_url\",\n                            image_url: {\n                                url: `data:${req.file.mimetype};base64,${base64Image}`\n                            }\n                        }\n                    ]\n                }\n            ],\n            max_tokens: 1000,\n            temperature: 0.7\n        });\n        // Clean up the temporary file\n        fs__WEBPACK_IMPORTED_MODULE_2___default().unlinkSync(req.file.path);\n        // Parse response with better error handling\n        const content = response.choices[0].message.content;\n        let parsedContent;\n        try {\n            console.log(\"Raw content:\", content);\n            const jsonString = content.replace(/^```json\\n?|\\n?```$/g, \"\").trim();\n            parsedContent = JSON.parse(jsonString);\n            if (!parsedContent.title || !parsedContent.description || !parsedContent.emotional_analysis) {\n                throw new Error(\"Invalid response structure\");\n            }\n        } catch (e) {\n            console.error(\"Parsing error:\", e);\n            parsedContent = {\n                title: \"Image Analysis\",\n                description: \"Unable to process description\",\n                emotional_analysis: \"Unable to process emotional analysis\",\n                tags: []\n            };\n        }\n        const safeResponse = {\n            title: parsedContent.title || \"Untitled\",\n            description: parsedContent.description || \"No description available\",\n            emotional_analysis: parsedContent.emotional_analysis || \"No emotional analysis available\",\n            relevant_quote: parsedContent.relevant_quote || \"No relevant quote available\",\n            fashion_commentary: parsedContent.fashion_commentary || \"No fashion commentary available\",\n            beauty_analysis: parsedContent.beauty_analysis || null,\n            political_analysis: parsedContent.political_analysis || \"No political analysis available\",\n            fragrance_suggestion: parsedContent.fragrance_suggestion || \"No fragrance suggestion available\",\n            cosmetic_suggestions: parsedContent.cosmetic_suggestions || \"No cosmetic suggestions available\",\n            eyewear_suggestions: parsedContent.eyewear_suggestions || \"No eyewear suggestions available\",\n            symbolic_meaning: parsedContent.symbolic_meaning || \"No symbolic analysis available\",\n            cultural_significance: parsedContent.cultural_significance || \"No cultural analysis available\",\n            psychological_insight: parsedContent.psychological_insight || \"No psychological insight available\",\n            artistic_elements: parsedContent.artistic_elements || \"No artistic analysis available\",\n            historical_context: parsedContent.historical_context || \"No historical context available\",\n            haircut_suggestion: parsedContent.haircut_suggestion || \"No haircut suggestions available\",\n            hair_color_suggestion: parsedContent.hair_color_suggestion || \"No hair color suggestions available\",\n            winter_wear_suggestion: parsedContent.winter_wear_suggestion || \"No winter wear suggestions available\",\n            tags: Array.isArray(parsedContent.tags) ? parsedContent.tags : [],\n            suggested_cities: [\n                {\n                    city: \"Kyoto, Japan\",\n                    contribution: \"Will enhance your appreciation for mindfulness and traditional aesthetics\"\n                },\n                {\n                    city: \"Barcelona, Spain\",\n                    contribution: \"Will awaken your creative spirit through modernist architecture\"\n                },\n                {\n                    city: \"Copenhagen, Denmark\",\n                    contribution: \"Will inspire your sense of design and sustainable living\"\n                }\n            ].map((city)=>`${city.city}: ${city.contribution}`).join(\"\\n\\n\"),\n            business_opportunity: parsedContent.business_opportunity || \"No business opportunities identified\"\n        };\n        const generateTags = (content)=>{\n            const allText = [\n                content.title,\n                content.description,\n                content.emotional_analysis,\n                content.fashion_commentary,\n                content.symbolic_meaning,\n                content.cultural_significance,\n                content.psychological_insight,\n                content.artistic_elements,\n                content.business_opportunity\n            ].join(\" \");\n            // Extract key words and phrases\n            const words = allText.toLowerCase().replace(/[^\\w\\s]/g, \"\").split(/\\s+/).filter((word)=>word.length > 3) // Filter out short words\n            .filter((value, index, self)=>self.indexOf(value) === index); // Remove duplicates\n            // If we have parsed tags from the API, include them first\n            const existingTags = Array.isArray(content.tags) ? content.tags : [];\n            const combinedTags = [\n                ...existingTags,\n                ...words\n            ];\n            // Select 15 unique tags, prioritizing existing tags\n            const finalTags = combinedTags.filter((value, index, self)=>self.indexOf(value) === index) // Remove duplicates\n            .slice(0, 15);\n            // Ensure we always have 15 tags\n            while(finalTags.length < 15){\n                finalTags.push(`Tag ${finalTags.length + 1}`);\n            }\n            return finalTags;\n        };\n        const tags = generateTags(parsedContent);\n        return res.status(200).json({\n            ...safeResponse,\n            tags: tags\n        });\n    } catch (error) {\n        console.error(\"Error processing image:\", error);\n        return res.status(500).json({\n            title: \"Error\",\n            description: \"Failed to analyze image\",\n            tags: []\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/ai-code.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-code&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-code.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();